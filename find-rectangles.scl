types:
 ID
 
input: line x1 y1 x2 y2

output: rect x y width height

match rules:

rectangle {
    forall line (L) {
      line (L') where joined (L, L') {
        line (L'') where joined (L', L'') {
          line (L''') where joined (L'', L''') {
           }
         }
       }
    } calculate {
        TopLine = topmost (L, L', L'', L''')
        LeftLine = leftmost (L, L', L'', L''')
        Width = abs (TopLine.x2 - TopLine.x1)
        Height = abs (LeftLine.y2 - LeftLine.y1)
        x = min (TopLine.x1, TopLine.x2)
        y = min (LeftLine.y1, LeftLine.y2)
    } emit {
	rect (new R)
	x (R x)
	y (R y)
	width (R Width)
	height (R Height)	     	   
}


main =
 rectangle

external function joined (L, L') >> SucceedFail

external function topmost (L, L', L'', L''') >> ID

external function leftmost (L, L', L'', L''') >> ID

